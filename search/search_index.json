{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Terraform supports remote state management using S3 and DynamoDB services from AWS. This CDK construct provides an implementation following recommended practices, e.g.</p> <ul> <li>state locking and consistency checking via Dynamo DB</li> <li>encryption of state files at rest</li> <li>versioning on the S3 bucket   Allowing state recovery in the case of accidental deletions and human error</li> </ul> <p>A full list of features is available in the here.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#s3-bucket","title":"S3 Bucket","text":"<ul> <li>[S3.2] S3 buckets should prohibit public read access</li> <li>[S3.3] S3 buckets should prohibit public write access</li> <li>[S3.4] S3 buckets should have server-side encryption enabled</li> <li>[S3.5] S3 buckets should require requests to use Secure Socket Layer</li> <li>[S3.14] S3 buckets should use versioning</li> <li>A lifecycle policy for non-current versions of objects [S3.10] S3 buckets with versioning enabled should have lifecycle policies configured</li> <li>Enforcing that the bucket owner owns every object in the bucket.</li> </ul>"},{"location":"features/#dynamodb-table","title":"DynamoDB Table","text":"<ul> <li>[DynamoDB.2] DynamoDB tables should have point-in-time recovery enabled</li> </ul>"},{"location":"features/#iam","title":"IAM","text":"<ul> <li>Managed policy for accessing the S3 bucket and keys as well as the DynamoDB table.</li> </ul>"},{"location":"links/","title":"Links","text":"<ul> <li>AWS Cloud Development Kit</li> <li>AWS DynamoDB</li> <li>AWS Simple Storage Service</li> <li>Amazon Simple Storage Service controls</li> <li>Controlling ownership of objects and disabling ACLs for your bucket</li> </ul>"}]}